{{- if .Values.postgresql.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "auth-service.fullname" . }}-postgresql
  labels:
    {{- include "auth-service.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "auth-service.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "auth-service.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
          {{- if .Values.postgresql.persistence.enabled }}
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
          {{- end }}
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.auth.username }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.auth.username }}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
      {{- if .Values.postgresql.persistence.enabled }}
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: {{ include "auth-service.fullname" . }}-postgresql
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "auth-service.fullname" . }}-postgresql
  labels:
    {{- include "auth-service.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.postgresql.service.port }}
      targetPort: postgresql
      protocol: TCP
      name: postgresql
  selector:
    {{- include "auth-service.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
{{- end }}